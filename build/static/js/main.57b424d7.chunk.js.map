{"version":3,"sources":["StateProvider.js","reducer.js","components/Search.js","components/Product.js","axios.js","components/Results.js","components/Detail.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","type","user","selected","item","query","Search","useState","selectedQuery","setSelectedQuery","dispatch","history","useHistory","className","src","alt","placeholder","onChange","e","target","onClick","preventDefault","push","Product","id","ciudad","title","price","currency","amount","decimals","picture","condition","free_shipping","sold_quantity","description","selectedProduct","renderText","precio","decimalScale","displayType","thousandSeparator","prefix","instance","axios","create","baseURL","Results","products","setProducts","resultado","useEffect","a","get","request","data","results","fetchData","slice","console","log","map","product","key","currency_id","thumbnail","city_name","Detail","Navigation","categorias","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.57b424d7.chunk.js","sourcesContent":["import React,{createContext,useContext,useReducer} from 'react' \n\n\nexport const StateContext = createContext()\n\nexport const StateProvider=({reducer, initialState, children}) =>(\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n)\n\nexport const useStateValue = () => useContext(StateContext)\n\nexport default StateProvider","\nexport const initialState = {\n    user: null,\n    selected: [],\n    query: 'iphone',\n}\n\n\nexport const actionTypes = {\n    SET_USER: \"SET_USER\",\n    SELECTED_PRODUCT: \"SELECTED_PRODUCT\",\n    SELECTED_QUERY: \"SELECTED_QUERY\",\n}\n\nconst reducer = (state, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.SET_USER:\n            return {\n                ...state,\n                user: action.user,\n            }\n        case actionTypes.SELECTED_PRODUCT:\n            return {\n                ...state,\n                selected: action.item,\n            }\n        case actionTypes.SELECTED_QUERY:\n            return {\n                ...state,\n                query: action.query\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer","import React, { useState } from 'react'\nimport '../css/Search.css'\nimport { useHistory } from 'react-router-dom'\nimport { useStateValue } from '../StateProvider'\nimport { actionTypes } from '../reducer'\n\nfunction Search() {\n    const [selectedQuery, setSelectedQuery] = useState()\n    // eslint-disable-next-line\n    const [{ }, dispatch] = useStateValue()\n    const history = useHistory()\n\n    const handleQuery = (e) => {\n        e.preventDefault()\n        dispatch({\n            type: actionTypes.SELECTED_QUERY,\n            query: selectedQuery\n        })\n        history.push(`/search/${selectedQuery}`)\n\n    }\n    return (\n        <div className=\"search\">\n            <img\n                className=\"search__logo\"\n                src=\"assets/Logo_ML.png\"\n                alt=\"Mercado Libre\"\n            />\n            <input\n                className=\"search__input\"\n                placeholder=\"Nunca dejes de buscar\"\n                value={selectedQuery}\n                onChange={(e) => setSelectedQuery(e.target.value)}\n            />\n            <img\n                className=\"search__find\"\n                src=\"assets/ic_Search.png\"\n                alt=\"\"\n                onClick={handleQuery}\n            />\n        </div>\n    )\n}\n\nexport default Search\n","import React from 'react'\nimport '../css/Product.css'\nimport CurrencyFormat from 'react-currency-format'\nimport { useStateValue } from '../StateProvider'\nimport { actionTypes } from '../reducer'\nimport { useHistory } from 'react-router-dom'\n\nfunction Product({ id, ciudad, title, price, currency, amount, decimals, picture, condition, free_shipping, sold_quantity, description }) {\n    // eslint-disable-next-line\n    const [{ }, dispatch] = useStateValue()\n    const history = useHistory()\n\n\n    const selectedProduct = () => {\n        dispatch({\n            type: actionTypes.SELECTED_PRODUCT,\n            item: {\n                id,\n                title,\n                price,\n                currency,\n                amount,\n                decimals,\n                picture,\n                condition,\n                free_shipping,\n                sold_quantity,\n                description\n            }\n        })\n        history.push(`/id=${id}/description`)\n    }\n\n    return (\n        <div className=\"product\">\n            <img\n                onClick={selectedProduct}\n                className=\"product__image\"\n                src={picture}\n                alt=\"\"\n            />\n            <div className=\"product__info\">\n                <div className=\"product__precio\" onClick={selectedProduct}>\n\n                    <CurrencyFormat\n                        renderText={(precio) => (\n                            <h3>{precio}</h3>\n                        )}\n                        decimalScale={2}\n                        value={amount}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                        prefix={\"$\"}\n                    />\n                    {free_shipping && <img\n                        src=\"assets/ic_shipping.png\"\n                        alt=\"\"\n                    />}\n\n                    <h5>{ciudad}</h5>\n                </div>\n                <div className=\"product__descripcion\">\n                    <p>{title}</p>\n                    <p>Completo Unico</p>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Product\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: \"https://api.mercadolibre.com/sites/MLA/search?q=\"\n})\n\nexport default instance","import React, { useState, useEffect } from 'react'\nimport '../css/Results.css'\nimport Product from './Product'\nimport axios from '../axios'\nimport { useStateValue } from '../StateProvider'\n\nfunction Results({ selectedQuery }) {\n    const [products, setProducts] = useState([{}])\n    const [{ query }] = useStateValue()\n    let resultado = []\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(query)\n            setProducts(request.data.results)\n            return request\n        }\n\n        fetchData()\n    }, [query])\n\n    resultado = products.slice(0, 4)\n    console.log(resultado)\n    return (\n        <div className=\"results\">\n\n            <div className=\"results__products\">\n\n                {/* <Product\n                    id=\"1\"\n                    title=\"Celular iPhone 11 128gb Nuevo 100% Original Y Sellada\"\n                    currency=\"$\"\n                    amount={3449000}\n                    decimals={0}\n                    picture=\"https://http2.mlstatic.com/D_NQ_NP_930210-MCO40352959326_012020-V.webp\"\n                    condition=\"Nuevo\"\n                    free_shipping\n                    ciudad=\"Montería\"\n                    sold_quantity={123}\n                    description=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\n\n                />\n                <Product\n                    id=\"2\"\n                    title=\"Celular iPhone 11 128gb Nuevo 100% Original Y Sellada\"\n                    currency=\"$\"\n                    amount={3449000}\n                    decimals={0}\n                    picture=\"https://http2.mlstatic.com/D_NQ_NP_686896-MCO41906861053_052020-V.jpg\"\n                    condition=\"Nuevo\"\n                    ciudad=\"Montería\"\n                    sold_quantity={123}\n                    description=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\n\n                />\n                <Product\n                    id=\"3\"\n                    imagen=\"https://http2.mlstatic.com/D_NQ_NP_741860-MCO32348231643_092019-V.jpg\"\n                    title=\"Celular iPhone 11 128gb Nuevo 100% Original Y Sellada\"\n                    currency=\"$\"\n                    amount={3449000}\n                    decimals={0}\n                    picture=\"https://http2.mlstatic.com/D_NQ_NP_741860-MCO32348231643_092019-V.jpg\"\n                    condition=\"Nuevo\"\n                    free_shipping\n                    ciudad=\"Montería\"\n                    sold_quantity={123}\n                    description=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\n                />\n                <Product\n                    id=\"4\"\n                    title=\"Celular iPhone 11 128gb Nuevo 100% Original Y Sellada\"\n                    currency=\"$\"\n                    amount={3449000}\n                    decimals={0}\n                    picture=\"https://http2.mlstatic.com/D_NQ_NP_760359-MCO43184765874_082020-V.jpg\"\n                    condition=\"Nuevo\"\n                    ciudad=\"Montería\"\n                    sold_quantity={123}\n                    description=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\n                /> */}\n\n                {resultado.map((product) => (\n                    <Product\n                        key={product.id}\n                        id={product.id}\n                        title={product.title}\n                        currency={product.currency_id}\n                        amount={product.price}\n                        decimals={0}\n                        picture={product.thumbnail}\n                        condition={product.condition}\n                        free_shipping={product.free_shipping}\n                        ciudad={product.city_name}\n                        sold_quantity={product.sold_quantity}\n                        description={product.description}\n                    />\n                ))}\n            </div>\n        </div>\n\n    )\n}\n\nexport default Results\n","import React from 'react'\nimport '../css/Detail.css'\nimport { useStateValue } from '../StateProvider'\nimport CurrencyFormat from 'react-currency-format'\n\n\nfunction Detail() {\n    const [{ selected }] = useStateValue()\n    return (\n        <div className=\"detail\">\n\n            <div className=\"detail__detalles\">\n\n                <img\n                    src={selected.picture}\n                    alt=\"\"\n                    className=\"detail__imagen\"\n                />\n                <div className=\"detail__descripcion\">\n                    <h2>Descripción del producto</h2>\n                    <p>{selected.description}</p>\n                </div>\n            </div>\n            <div className=\"detail__info\">\n                <h4>{selected.condition} - {selected.sold_quantity} vendidos</h4>\n                <h2>{selected.title}</h2>\n                <CurrencyFormat\n                    renderText={(precio) => (\n                        <h3>{precio}</h3>\n                    )}\n                    decimalScale={2}\n                    value={selected.precio}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                    prefix={selected.currency}\n                />\n                <button>Comprar</button>\n            </div>\n\n\n\n\n        </div>\n    )\n}\n\nexport default Detail\n","import React from 'react'\nimport '../css/Navigation.css'\n\nfunction Navigation({ categorias }) {\n    return (\n        <div className=\"navigation\">\n            <h3>{categorias}</h3>\n            {/* <h3>Electrónica, Audio y Video, Celulares y Teléfonos> Celulares y Smartphones >Apple> iPhone 11</h3> */}\n        </div>\n    )\n}\n\nexport default Navigation\n","import React, { useState } from 'react';\nimport './css/App.css';\nimport Search from './components/Search';\nimport Results from './components/Results';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Detail from './components/Detail';\nimport Navigation from './components/Navigation';\n\nfunction App() {\n  const [selectedQuery, setSelectedQuery] = useState('iphone')\n  return (\n    <div className=\"app\">\n      <Router>\n        <div className=\"app\">\n          <Switch>\n            <Route path=\"/:productId/description\">\n              <Search />\n              <Navigation\n                categorias=\"Electrónica, Audio y Video, Celulares y Teléfonos> Celulares y Smartphones >Apple> iPhone 11\"\n              />\n              <Detail />\n            </Route>\n            {/* <Route path=\"/login\">\n            <Login />\n          </Route> */}\n            <Route path=\"/search/:query\">\n              <Search />\n              <Navigation\n                categorias=\"Electrónica, Audio y Video, Celulares y Teléfonos> Celulares y Smartphones >Apple> iPhone 11\"\n              />\n              <Results selectedQuery={selectedQuery} />\n            </Route>\n            <Route path=\"/\">\n              <Search setSelectedQuery={setSelectedQuery} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider'\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer} >\n      <App />\n    </StateProvider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}